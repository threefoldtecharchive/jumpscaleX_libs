@url = tfgrid.workloads.pool.create.1
json = (S)
data_reservation = (O) !tfgrid.workloads.pool.create.data.1
customer_tid = (I)
customer_signature = (S)

@url = tfgrid.workloads.pool.create.data.1
pool_id = (I)
cus = (I)
sus = (I)
node_ids = (LS)
currencies = (LS)

@url = tfgrid.workloads.pool.1
# ID is the id of the pool, which needs to be referenced in workloads
# wanting to use this pool to deploy. It can also be used to increase
# the pool
pool_id = (I)
# CUs and SUs are the `compute unit seconds` and `storage unit seconds`.
# These values represent the amount left in the pool when it was last
# updated, and do not represent current values (unless the pool just
# got updated)
cus = (F)
sus = (F)
# node ids on which this pool is applicable, only workloads deployed
# on these nodes must be deployed in the pool.
node_ids = (LS)
# unix timestamp when the counters where last synced. Syncing happens by
# deducting the amount of spent CU and SU, since the last sync, from
# the pool, and updating this field.
last_updated = (T)
# amount of active CU and SU tied to this pool. This is the amount of
# CU and SU that needs to be deducted from the pool.
active_cu = (F)
active_su = (F)
# timestamp when either CU or SU expires according to the current capacity
# still left and the capacity being used.
empty_at = (I64)
# CustomerTid is the threebot id of the pool owner. Only the owner can
# assign workloads to the pool
customer_tid = (I)

@url = tfgrid.workloads.pool.created.1
reservation_id = (I)
escrow_information = (O) !tfgrid.workloads.pool.escrow.1

@url = tfgrid.workloads.pool.escrow.1
address = (S)
asset = (S)
amount = (I)
